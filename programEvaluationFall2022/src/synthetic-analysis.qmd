---
title: "Synthetic Analysis"
execute: 
  warning: false
  echo: false
---

In this section, I create synthetic data. The linear relationships discussed in this section are not empirical. Instead, they are based on economic intuition. Building econometric models around synthetic data are essential because it reduces intentional/non-intensional p-hacking by setting up a pipeline for the data before actual data is explored. Since the model is pre-built, all the researchers must set `aca_data` equal to the real clean dataset, and the variable's names should match (see bullet points below).
- `year`: (numeric) the year observation was recorded. [i.e. 2012]
- `FIPS`: (numeric) the FIPS code corresponding to U.S. state [i.e. 34]
- `sick_days`: (numeric) the number of sick days the given individual had in year t
- `unins`: (numeric) a binary variable equal to one if an individual does not have health insurance
- `trips`: (numeric) number of trips to the doctor for a given individual in the year t
- `hcWorker`: (numeric) binary variable equal to one if the given individual works in healthcare

## Creating Fake Data

```{r}
library(broom)
library(ggplot2)
library(dplyr)
library(sn)
library(Rlab)
library(Rlab)
library(truncnorm)
library(scales)
library(fixest)
library(modelsummary)
options(dplyr.summarise.inform = FALSE)
```

```{r, message=F}
n <- 300000
years <- c(2010,2020)
set.seed(1234)
aca_data <- tibble(
  id = 1:n,
  year = runif(n, min = years[1], max = years[2]) %>% 
    round(0),
  FIPS = runif(n, min = 1, max = 56) %>% 
    round(0),
  sick_days_base = rtruncnorm(n, a = 0, b = Inf, mean = 7, sd = 5)%>% 
    round(0), # median should be around 7
  unins_base = rbern(n, .5), # Bernoulli Distribution in R
  trips_base = rbeta(n, shape1 = 2, shape2 = 10) %>% 
    rescale(to=c(-2,30)), # testing theory that base data should not be truncated at 0
  hcWorker_base = rbern(n, prob = .1) # Does this have to be .5?
) 
```

let S be the set of states the expanded medicaid, and T be a set of years after 2016\
$$  
ACA(State) = 
\begin{cases}
 1, \space state \in S \\
  0, \space state \notin S
\end{cases}
$$\
$$  
Post(Year) = 
\begin{cases}
 1, \space Year \in T \\
  0, \space Year \notin T
\end{cases}
$$\
$$    
Y_i = \beta_0 + \beta_1 Post_t + \beta_2 ACA_s + \beta_3 Post_t*ACA_s + \epsilon_{i,t}
$$

```{r, message=F}
expansion_states <- c(4,5,6,8,9,10,11,15,17,19,21,24,25,26,27,
                     32,33,34,35,36,38,39,41,44,50,53,54)
not_states <- c(7,14,43,52)

aca_data <- aca_data %>%
  filter(!FIPS %in% not_states) %>%
  mutate(aca = as.factor(as.numeric(FIPS %in% expansion_states))) %>%
  mutate(post = ifelse(year >= 2014,1,0)) 
 
 
```

## Adding Variable Relationships

### Sick Days

$$
SickDays_i = \alpha_1  -1.3 *Post_t + 1.2 ACA_s -.08* Post_t*ACA_s + \epsilon_{i,t}
$$

```{r, message=F}
n <- nrow(aca_data)
aca_data <- aca_data %>%
  mutate(beta_1 = rnorm(n, mean = 1, sd = .3)) %>%
  mutate(beta_2 = rnorm(n, mean = .5, sd = .04)) %>%
  mutate(beta_3 = rnorm(n, mean = -.2, sd = .0001)) %>%
  mutate(sick_days = round(sick_days_base + beta_1*post + beta_2*as.numeric(aca) + beta_3 * as.numeric(post)*as.numeric(aca),0))
```

### Uninsurance

$$  
Uninsurance_i = \alpha_2  -.1(Post_t) + .05 (ACA_s) -.3(Post_t*ACA_s) + \epsilon_{i,t}
$$

```{r, message=F}
aca_data <- aca_data %>%
  mutate(beta_1 = rnorm(n, mean = -.1, sd = .3)) %>%
  mutate(beta_2 = rnorm(n, mean = .05, sd = .04)) %>%
  mutate(beta_3 = rnorm(n, mean = -.3, sd = .0001)) %>%
  mutate(unins = unins_base + beta_1*post + beta_2*as.numeric(aca) + beta_3 * as.numeric(post)*as.numeric(aca)) %>%
  mutate(unins = ifelse(unins > .5, 1, 0))
```

### Trips to Doctor

$$  
DoctorTrips_i = \alpha_3  -2(Post_t) +  (ACA_s) +3(Post_t*ACA_s) + \epsilon_{i,t}
$$

```{r, message=F}
aca_data <- aca_data %>%
  mutate(beta_1 = rnorm(n, mean = -2, sd = 2)) %>%
  mutate(beta_2 = rnorm(n, mean = 1, sd = 4)) %>%
  mutate(beta_3 = rnorm(n, mean = 3, sd = .0001)) %>%
  mutate(trips = trips_base + beta_1*post + beta_2*as.numeric(aca) + beta_3 * as.numeric(post)*as.numeric(aca)) %>% 
  mutate(trips = ifelse(trips < 0, 0, trips))
```

### Health Care Worker

$$  
HealthCareWorker_i = \alpha_4  -.01(Post_t) + .009 (ACA_s) -.05(Post_t*ACA_s) + \epsilon_{i,t}
$$

```{r, message=F}
aca_data <- aca_data %>%
  mutate(beta_1 = rnorm(n, mean = -.01, sd = .2)) %>%
  mutate(beta_2 = rnorm(n, mean = .009, sd = .004)) %>%
  mutate(beta_3 = rnorm(n, mean = .05, sd = .0001)) %>%
  mutate(hcWorker = hcWorker_base + beta_1*post + beta_2*as.numeric(aca) + beta_3 * as.numeric(post)*as.numeric(aca)) %>%
  mutate(hcWorker = ifelse(hcWorker > .5, 1, 0))
```

## Exploratory Anlaysis

### Sick Days

```{r, message=F}
ggplot(aca_data) + 
  geom_histogram(aes(x = sick_days), bins = 30, colour = "black", fill = "grey") +
  labs(title = "Sick Days Distribution", x = "Sick Days") 
```

```{r, message=F}
parallel.sickdays <- aca_data %>%
  group_by(year, aca) %>%
  summarise(avg_sick = mean(sick_days))

ggplot(parallel.sickdays, mapping = aes(x=year, y=avg_sick, color = aca)) +
  geom_line() +
  geom_point() +
  geom_vline(xintercept = 2014) +
  labs(title = "Average Sick Days by Expansion Status", x = "Year", y="Average Sick Days")
```

### Uninsurance

```{r, message=F}
parallel.unins <- aca_data %>%
  group_by(year, aca) %>%
  summarise(avg_unins = mean(unins))

ggplot(parallel.unins, mapping = aes(x=year, y=avg_unins, color = aca)) +
  geom_line() +
  geom_point() +
  geom_vline(xintercept = 2014) +
  labs(title = "Uninsurance Rate by Expansion Status", x = "Year", y="Uninsurance Rate")
```

### Trips to Doctor

```{r, message=F}
ggplot(aca_data) + 
  geom_histogram(aes(x = trips), bins = 30, colour = "black", fill = "grey") +
  labs(title = "Doctor Trips Distribution", x = "Trips") 
```

```{r, message=F}
parallel.unins <- aca_data %>%
  group_by(year, aca) %>%
  summarise(avg_trips = mean(trips))

ggplot(parallel.unins, mapping = aes(x=year, y=avg_trips, color = aca)) +
  geom_line() +
  geom_point() +
  geom_vline(xintercept = 2014) +
  labs(title = "Average Doctor Trips by Expansion Status", x = "Year", y="Average Trips")
```

### Health Care Worker

```{r, message=F}
parallel.unins <- aca_data %>%
  group_by(year, aca) %>%
  summarise(avg_hc = mean(hcWorker))

ggplot(parallel.unins, mapping = aes(x=year, y=avg_hc, color = aca)) +
  geom_line() +
  geom_point() +
  geom_vline(xintercept = 2014) +
  labs(title = "% HealthCare Worker by Expansion Status", x = "Year", y="% HealthCare Worker")
```

# Regression Analysis

```{r no fixed effects, message=F}
lm.sick <- lm(sick_days ~ (post*aca), data = aca_data)
lm.uninsurance <- lm(unins ~ (post*aca), data = aca_data)
lm.trips <- lm(trips ~ (post*aca), data = aca_data)
lm.hc <- lm(hcWorker ~ (post*aca), data = aca_data)

modelsummary(list(
  "Sick Days" = lm.sick,
  "Uninsurance" = lm.uninsurance,
  "Doctor Trips" = lm.trips,
  "HealthCare Worker" = lm.hc
),
title = "No Fixed Effects",
stars = T,
gof_omit = "AIC|BIC|Log.Lik.",
coef_rename = c("post" = "Post", "aca1" = "ACA", "post Ã— aca1" = "Post:ACA"))
```

```{r fixed effects, message=F}
fe.sick <- feols(sick_days ~ (post*aca) | FIPS + year,data = aca_data)
fe.uninsurance <- feols(unins ~ (post*aca) | FIPS + year, data = aca_data)
fe.trips <- feols(trips ~ (post*aca) | FIPS + year, data = aca_data)
fe.hc <- feols(hcWorker ~ (post*aca) | FIPS + year, data = aca_data)


modelsummary(list(
  "Sick Days" = fe.sick,
  "Uninsurance" = fe.uninsurance,
  "Doctor Trips" = fe.trips,
  "HealthCare Worker" = fe.hc
),
title = "Fixed Effects",
stars=T,
gof_omit = "R2 Within|R2 Within Adj.|AIC|BIC|Std.Errors|FE: FIPS|FE: year",
coef_rename = c("post:aca1" = "Post:ACA"))
```
